/* ********************************************************************
   * Project   :
   * Author    : smartin
   ********************************************************************

    Modifications:
    0.01 24/10/2013 Initial version.
*/

/*---------------------------------------------------------------------
  -- macros
  ---------------------------------------------------------------------*/
#define HYPERVISOR_MAP_SHARED_INFO      (1)
#define HYPERVISOR_EVENTS               (1)
#define HYPERVISOR_RTC                  ((1) && HYPERVISOR_MAP_SHARED_INFO)
#define HYPERVISOR_CONSOLE              ((1) && HYPERVISOR_MAP_SHARED_INFO)
#define HYPERVISOR_XENSTORE             (1)
#define HYPERVISOR_PRODUCE_RING_BUFFER  (0)
#define HYPERVISOR_CONSUME_RING_BUFFER  (0)

#define PRINTK(format...) printk(__FILE__, __LINE__, ##format)

/*---------------------------------------------------------------------
  -- standard includes
  ---------------------------------------------------------------------*/
#include <sys/time.h>
#include <xen/io/console.h>

/*---------------------------------------------------------------------
  -- project includes (import)
  ---------------------------------------------------------------------*/
#include "os.h"
#include "traps.h"

/*---------------------------------------------------------------------
  -- project includes (export)
  ---------------------------------------------------------------------*/

/*---------------------------------------------------------------------
  -- data types
  ---------------------------------------------------------------------*/

/*---------------------------------------------------------------------
  -- function prototypes
  ---------------------------------------------------------------------*/

/**
 * Initialise the hypervisor interface.
 *
 * @param si     Pointer to the start_info structure passed to the VM by the Xen hypervisor at start up.
 */
void hypervisor_start(start_info_t *si);

#if HYPERVISOR_RTC == 1
/**
 * Merge the current processor TSC register with the start parameters to create the current timestamp.
 *
 * @param tp     Output structure that will hold the calculated time.
 *
 * @return 0 if successful, otherwise -1.
 */
int hypervisor_gettimeofday(struct timeval *tp);
#endif

#if HYPERVISOR_CONSOLE == 1
/**
 * Write characters to the Xen console.
 *
 * @param message Characters to be written.
 *
 * @return Number of characters written.
 */
int hypervisor_console_write(const char *format, ...) __attribute__((format (printf, 1, 2)));
#endif

void do_hypervisor_callback(struct pt_regs *regs);

void printk(const char *file, long line, const char *format, ...) __attribute__((format (printf, 3, 4)));

/*---------------------------------------------------------------------
  -- global variables
  ---------------------------------------------------------------------*/

/*---------------------------------------------------------------------
  -- local variables
  ---------------------------------------------------------------------*/

/*---------------------------------------------------------------------
  -- private functions
  ---------------------------------------------------------------------*/

/*---------------------------------------------------------------------
  -- public functions
  ---------------------------------------------------------------------*/

