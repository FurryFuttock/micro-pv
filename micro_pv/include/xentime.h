/* ********************************************************************
   * Project   :
   * Author    : smartin
   ********************************************************************

    Modifications:
    0.01 25/11/2013 Initial version.
*/

/*---------------------------------------------------------------------
  -- macros (preamble)
  ---------------------------------------------------------------------*/

/*---------------------------------------------------------------------
  -- standard includes
  ---------------------------------------------------------------------*/

/*---------------------------------------------------------------------
  -- project includes (import)
  ---------------------------------------------------------------------*/

/*---------------------------------------------------------------------
  -- project includes (export)
  ---------------------------------------------------------------------*/

/*---------------------------------------------------------------------
  -- macros (postamble)
  ---------------------------------------------------------------------*/

/*---------------------------------------------------------------------
  -- data types
  ---------------------------------------------------------------------*/

/*---------------------------------------------------------------------
  -- function prototypes
  ---------------------------------------------------------------------*/
/**
 * Initialise the hypervisor time interface
 */
void xentime_init(void);

/**
 * Stop the periodic timer on this VCPU. The periodic timer is a low resolution
 * low priority event. It was suggested by the Xen maillist that we should
 * be using the single shot timer instead.
 *
 * @return 0 on success, other on error
 */
int xentime_stop_periodic(void);

/**
 * Set the deadline for the next single shot timer event. We cannot guarantee
 * when this will happen. It all depends on what is going on in the hypervisor
 * at the time.
 *
 * @param timer_deadline
 *               Absolute time in nanoseconds of the next deadline
 *
 * @return 0 on success, other on error
 */
int xentime_set_next_event(uint64_t timer_deadline);

/**
 * Update the wallclock
 */
void xentime_update(void);

/*---------------------------------------------------------------------
  -- global variables
  ---------------------------------------------------------------------*/

/*---------------------------------------------------------------------
  -- local variables
  ---------------------------------------------------------------------*/

/*---------------------------------------------------------------------
  -- private functions
  ---------------------------------------------------------------------*/

/*---------------------------------------------------------------------
  -- public functions
  ---------------------------------------------------------------------*/

